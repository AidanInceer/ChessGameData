
name: Deploy Cloud Function

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - develop

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - id: Set-Up
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - id: Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  Lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    - name: Flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E501,W503
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

  Test:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Pytest
      run: python -m pytest

  Scan:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Pytest
        run: |
          python -m pytest --cov=.  --cov-report=xml
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .

  Deploy:
    needs: [Build, Lint, Test, Scan]
    if: github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - uses: 'actions/checkout@v3'

    - id: Authenticate-GCP
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - id: Deploy-GCP
      uses: google-github-actions/deploy-cloud-functions@main
      with:
        name: extract_game_data
        region: europe-west2
        runtime: python39
        memory_mb: 256
        project_id:  ${{ secrets.GCP_PROJECT_ID }}
        entry_point: extract_game_data
        timeout: 300
        min_instances: 0
        max_instances: 1
