
name: Deploy Cloud Function

env:
  PROJECT: united-axle-390115

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - id: Set-Up
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
        
    - id: Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  # Lint:
  #   needs: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.9"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       pip install -r requirements.txt
  #   - name: Run flake8 linting
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E501,W503 
  #       # exit-zero treats all errors as warnings. The GitHub editor is 89 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=89 --statistics

  # Test:
  #   needs: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.9"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt

  # Scan:
  #   needs: Test
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - id: Set-Up
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.9"
        
  #   - id: Dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt

  Deploy:
    needs: Build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - uses: 'actions/checkout@v3'

    - id: Authenticate-GCP
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - id: Deploy-GCP
      uses: google-github-actions/deploy-cloud-functions@main
      with:
        name: extract_game_data
        region: europe-west2
        runtime: python39
        memory_mb: 256
        project_id:  ${{env.PROJECT}}
        entry_point: extract_game_data
        timeout: 300
        min_instances: 0
        max_instances: 1

